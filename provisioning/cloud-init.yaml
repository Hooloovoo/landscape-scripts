## template: jinja
#cloud-config

# SET OUR VARIABLES
# =================

# Assuming you use SSL from LetsEncrypt, follow these steps on your Ubuntu workstation
# replace landscape.yourdomain.com with the domain name you will use for Landscape

# sudo snap install certbot --classic
# sudo certbot -d landscape.yourdomain.com --manual --preferred-challenges dns certonly

# The value for SSL_CERT below is the output of:
# sudo base64 -w 0 /etc/letsencrypt/live/landscape.yourdomain.com/fullchain.pem
{% set SSL_CERT = 'SELFSIGNED' %}

# The value for SSL_KEY below is the output of:
# sudo base64 -w 0 /etc/letsencrypt/live/landscape.yourdomain.com/privkey.pem
{% set SSL_KEY = 'SELFSIGNED' %}

# =========================
# END OF SETTING VARIABLES

package_update: true
package_upgrade: true
packages:
  - iptables
  - iptables-persistent
  - snapd
  - lxc

write_files:
  - path: /tmp/redeploy_haproxy.sh
    owner: 'ubuntu:ubuntu'
    permissions: '0755'
    defer: true
    content: |
      #!/bin/bash
      echo "arm64 detected - redeploying haproxy due to a known issue with the HAProxy Charm on arm64"
      su ubuntu -c "juju remove-application haproxy"
      su ubuntu -c "juju deploy haproxy --config default_timeouts='queue 60000, connect 5000, client 120000, server 120000' --config services='' --config ssl_cert='{{ SSL_CERT }}' --config ssl_key='{{ SSL_KEY }}' --config global_default_bind_options='no-tlsv10' --series focal"
      su ubuntu -c "juju expose haproxy"
      su ubuntu -c "juju relate landscape-server haproxy"
      /bin/bash /home/ubuntu/iptables_portforward.sh
  - path: /home/ubuntu/iptables_portforward.sh
    owner: 'ubuntu:ubuntu'
    permissions: '0755'
    defer: true
    content: |
      #!/bin/bash
      echo "applying port forwarding... (may take several minutes)"
      iptables -t nat -L --line-numbers | grep "haproxy" | awk -F "" '{print $1}' | sort -rn | xargs -I {} iptables -t nat -D PREROUTING {}
      read -r HAPROXY_INSTANCE_NUMBER < <(su - ubuntu -c "juju status --format=json | awk -F'haproxy/' '{print substr(\$2,1,1)}'")
      read -r HAPROXY_UNIT_IP < <(su ubuntu -c "juju run --unit haproxy/$HAPROXY_INSTANCE_NUMBER 'network-get public --ingress-address=true'")
      read -r INTERFACE INTERFACE_IP < <(ip -4 route ls | awk '/default/{print $5, $9}')
      for PORT in 443 80; do
        iptables -t nat -I PREROUTING -i $INTERFACE -p tcp -d $INTERFACE_IP --dport $PORT -j DNAT --to-destination $HAPROXY_UNIT_IP:$PORT -m comment --comment haproxy
      done

snap:
 commands:
   - ['install', 'juju', '--classic']

runcmd:
{% if platform == 'gce' %}
 - lxd init --auto
 - su ubuntu -c "lxc network set lxdbr0 bridge.mtu=1460"
{% endif %}
{% if platform == 'oracle' %}
 - iptables -F && netfilter-persistent save
{% endif %}
 - su ubuntu -c "juju bootstrap localhost lxdlandscape"
 - su ubuntu -c "juju set-model-constraints arch=$(dpkg --print-architecture)"
 - su ubuntu -c "juju deploy landscape-scalable --channel edge"
 - |
   if [ $(dpkg --print-architecture) = 'arm64' ]; then
     /bin/bash /tmp/redeploy_haproxy.sh
   else
{% if SSL_KEY != "SELFSIGNED" %}
     su ubuntu -c "juju config haproxy ssl_cert='{{ SSL_CERT }}' ssl_key='{{ SSL_KEY }}'"
{% endif %}
     /bin/bash /home/ubuntu/iptables_portforward.sh
   fi
